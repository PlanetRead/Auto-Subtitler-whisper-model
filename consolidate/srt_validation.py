import sys
import os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), "..")))


from pathlib import Path

from consolidate.logger import logger
from consolidate.aligner import EnhancedTranscriptAligner
from consolidate.utils import calculate_subtitle_error_rate, generate_srt_file_output, load_segments_from_json, read_ground_truth_file

# Define paths
base_path = Path("temp")
os.makedirs(base_path, exist_ok=True)
results_path = base_path / "Results"

def calculate_error_rate(srt_file: str, text_file: str, json_file: str, base_name: str):
    """
    This function will be used to calculate the error rate of the subtitle alignment.
    """

    json_path = json_file
    file_transcript_path =  text_file

    # Results files - Alignment
    alignment_word_level_path = results_path / "Alignment" / "Word_level"
    alignment_word_level_path.mkdir(parents=True, exist_ok=True)

    alignment_sentence_level_path = results_path / "Alignment" / "Sentence_level"
    alignment_sentence_level_path.mkdir(parents=True, exist_ok=True)

    # Load json data generated by OprnAI
    pred_srt_sentences = load_segments_from_json(json_path)

    # Define paths
    pred_aligned_srt_path = alignment_word_level_path / f"{base_name}.srt"
    gt_aligned_srt_path = srt_file


    ground_truth_text = read_ground_truth_file(file_transcript_path)
    results, _, updated_pred_sentences = EnhancedTranscriptAligner(similarity_threshold=0.75).align_predicted_sentences(ground_truth_text, pred_srt_sentences)

    generate_srt_file_output(
        results,
        updated_pred_sentences,
        alignment_word_level_path / f"{base_name}.srt",
        alignment_sentence_level_path / f"{base_name}.srt"
    )
    print(f"Aligned GT transcript saved as {base_name}_Word_level.srt")


    calculate_subtitle_error_rate(pred_aligned_srt_path, gt_aligned_srt_path)